# -*- coding: utf-8 -*-
"""Wine Quality Prediction - Random Forest Classifier Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OWLH_QDZ2Jneqak8R04v-3BWzsTmBo5E
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

wine_data = pd.read_csv('/content/winequalityN.csv')

wine_data.head()

wine_data.shape

wine_data.isnull().sum()

wine_data.dropna(inplace=True)

wine_data.isnull().sum()

wine_data.describe()

wine_data['type'] = wine_data['type'].map({'white': 1, 'red': 0})

corerelation = wine_data.corr()

plt.figure(figsize=(10,10))
sns.heatmap(corerelation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

X = wine_data.drop(columns=['quality'])

Y = wine_data['quality'].apply(lambda y_value: 1 if y_value >= 6 else 0)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

model = RandomForestClassifier()

model.fit(X_train, Y_train)

train_prediction = model.predict(X_train)
test_prediction = model.predict(X_test)

score_train = accuracy_score(train_prediction, Y_train)
score_test = accuracy_score(test_prediction, Y_test)

print('Accuracy on training data : ', score_train)
print('Accuracy on test data : ', score_test)

input = (1,7,0.27,0.36,20.7,0.045,45,170,1.001,3,0.45,8.8)
input_data = np.asarray(input)
input_data_reshaped = input_data.reshape(1,-1)
prediction = model.predict(input_data_reshaped)
print(prediction)
if prediction == 1:
  print('Good Quality Wine')
else:
  print('Bad Quality Wine')

